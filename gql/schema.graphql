# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type AuthIdentity {
    id: ID!
    uid: String!
    user: User!
}

type User {
    authIdentities: [AuthIdentity!]!
    id: ID!
    name: String
    #  banned: Boolean!
}


#input NewAuthIdentity {
#  uid: String!
#}

type Mutation {
    signin(creds: SigninInput!): SigninResponse!
    signup(creds: SignupInput!): SignupResponse!
    totpDisable(data: TOTPDisableInput!): TOTPDisableResponse! @auth(addUserToCtx: true)
    totpGenerate: TOTPGenerateResponse! @auth(addUserToCtx: true)
    totpSetup(data: TOTPSetupInput!): TOTPSetupResponse! @auth(addUserToCtx: true)
    totpVerify(data: TOTPVerifyInput!): SigninResponse! @auth(addUserToCtx: true)
}

type Query {
    getAuthJWT: GetAuthJWTResponse!
    me: User!
}

type SigninResponse {
    refresh_token: String
    totp_token: String
}

type GetAuthJWTResponse {
    auth_token: String!
}

type SignupResponse {
    user: User!
}

input SigninInput {
    email: String!
    password: String!
}

input TOTPVerifyInput {
    code: String!
}

input TOTPSetupInput {
    code: String!
}

input SignupInput {
    email: String!
    password: String!
}

type TOTPGenerateResponse {
    qrcode: String!
}

input TOTPDisableInput {
    code: String!
}

type TOTPSetupResponse {
    backupCodes: [String!]!
    #    token: String!
}

type TOTPDisableResponse {
    success: Boolean!
}


directive @auth(addUserToCtx: Boolean) on FIELD_DEFINITION
